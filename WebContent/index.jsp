<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<!-- 
	MVC?
	Model View Controller
	 + 모델은 제공할 서비스의 총체.(데이터와 비지니스 로직을 의미함) 
	 + 뷰는 사용자에게 보여질 화면
	 + 컨트롤러는 모델과 뷰를 연결해주는 중계자 역할을 한다.
	 - 애플리케이션을 설계할때 사용하는 디자인패턴 중의 하나로 역사가 깊은 설계방식이다.
	 - 사용자에게 보여질 화면(view)과 제공할 서비스(Model)를 Controller라는 중계자가 연결해주는 소프트웨서 설계방식.
	 + 이후 갱장히 많은 MV(X)패턴이 나왔지만 기본적으로 Model과 View를 연결하는 역할을 어디서 수행하느냐가 포인트임.
	 - 역할별로 코드가 나누어져 있기 때문에 코드의 유지보수가 편리함.
	 - Monolithic Architecture(모놀리식 아키텍쳐), 모놀리식한 어플리케이션에서 자주 사용되는 소프트웨서 설계 패턴이다.
	
	Monolithic Architecture?
	 + Monolithic ? (하나의, 하나로)
	 - 모든 기능이 하나로 합쳐진 어플리케이션
	 - 회원과 관련된 기능, 게시판과 관련된기능, 관리자와 관련된 기능, 보여질 화면등을 하나의 애플리케이션으로 묶어서
	   배포하는 방식	  
	   
	 + jsp&spring framework에서 많이 사용되는 제품설계방식	 
	 + 설계 특징상 한개의 어플리케이션에서만 만들기때문에 하나의 언어로만 개발함.
	 + 회원과 관련된 기능만 수정한다고하더라도, 게시판, 관리자등 상관없는 기능들도 모두 다시 배포해야함
	 + 하나의 제품에 모든 기능이 집약되어 있기때문에 제품이 커질수록 코드의 복잡성이 증가하고 유지보수가 힘들어짐 ㅎ.
	 + 단 너무많은 시중 제품들이 모놀로식 아키텍쳐임.

	 + 설계가 쉬움. 중소규모의 어플리케이션 개발에 적합한 방식.	 
	
	(대비되는 개념으로는 MSA(Microservices Architecture)가 있음
	 - 애플리케이션을 작은 독립적인 단위로 포장하여 배포하는 설계방식.
	 - 회원과 관련된 어플리케이션 , 게시판과 관련된 어플리케이션, 관리자와 관련된 어플리케이션등을 독립적인 단위로 포장.
	 - 개별적으로 배포 가능하고, 하나의 제품을 수정할때 하나의 기능만 수정하면 되므로 배포가 쉽고 빠름
	 - 각 서비스는 기술적으로 여러 언어로 작성하여 개발할 수 있음.
     - REACT - SPRING BOOT 개발방식.)
 -->
	<!-- 
	
		* 회원서비스	| C (Insert) | R (Select) | U (Update) | D (Delete)
		=================================================================
			로그인	|	   	 	 | 		O	  |			   |
			회원가입	|	  O		 |			  |			   |
	 	[아이디 중복확인]|			 |		O	  |			   |
		     마이페이지      |			 |		O	  |			   |
			정보변경      |			 |		 	  |		O	   |
			회원탈퇴      |			 |		 	  |		O	   |	O
			
		* 공지사항서비스 - 공지사항리스트조회(R)/공지사항상세조회(R)/공지사항작성(C)/공지사항수정(U)/공지사항삭제(U/D)
		
		* 일반게시판서비스 - 게시판리스트조회(R)-페이징처리/게시판상세조회(R)/게시판작성(C)-첨부파일1개업로드
					       게시판수정(U)/게시판삭제(U/D)/[댓글리스트조회(R)/댓글작성(C)]
	
		* 사진게시판서비스 - 게시판리스트조회(R)-썸네일/게시판상세조회(R)/게시판작성(C)-다중첨부파일업로드
		      
	 -->
	 
	 <!-- 잘 실행되나..? -->
	 
	 <!-- 상단에는 menubar.jsp, 메인화면에 index.jsp 가 올 수 있게끔 할것임 -->
	 <%@ include file="views/common/menubar.jsp" %>
	
</body>
</html>